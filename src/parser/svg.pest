root = { tag_begin_nested ~ children* ~ tag_closing }
nested_element = { tag_begin_nested ~ children* ~ tag_closing }
single_element = { tag_begin_single }

tag_begin_nested = _{ "<" ~ tag ~ attributes ~ ">" }
tag_begin_single = _{ "<" ~ tag ~ attributes ~ "/>" }
tag_end = _{ ">" | "/>" }
tag_closing = @{ "</" ~ tag ~ ">" }

tag = { "animateTransform" | "animateMotion" | "animate" | "a" | "circle" | "clipPath" | "defs" | "desc" | "ellipse" | "feBlend" | "feColorMatrix" | "feComponentTransfer" | "feComposite" | "feConvolveMatrix" | "feDiffuseLighting" | "feDisplacementMap" | "feDistantLight" | "feDropShadow" | "feFlood" | "feFuncA" | "feFuncB" | "feFuncG" | "feFuncR" | "feGaussianBlur" | "feImage" | "feMergeNode" | "feMerge" | "feMorphology" | "feOffset" | "fePointLight" | "feSpecularLighting" | "feSpotLight" | "feTile" | "feTurbulence" | "filter" | "foreignObject" | "g" | "hatchpath" | "hatch" | "image" | "linearGradient" | "line" | "marker" | "mask" | "metadata" | "mpath" | "path" | "pattern" | "polygon" | "polyline" | "radialGradient" | "rect" | "script" | "set" | "stop" | "style" | "svg" | "switch" | "symbol" | "textPath" | "text" | "title" | "tspan" | "use" | "view" }

content = { (ASCII_ALPHANUMERIC | PUNCTUATION)+ }
replacement_token = { "@@" ~ (ASCII_ALPHA | "_")+ ~ "@@" }

children = { ( replacement_token | content ) | single_element+ | nested_element | comment | style }

attributes = { attribute_item* }
attribute_item = { attr ~ "=" ~ attr_value }
attr = @{ (letter_or_number+ ~ (":" | "-") ~ letter_or_number+ ~ (":" | "-") ~ letter_or_number+) | (letter_or_number+ ~ (":" | "-") ~ letter_or_number+) | (letter_or_number+) }
attr_value = _{ "\"" ~ (replacement_token | attr_value_inner) ~ "\"" }
attr_value_inner = @{ char+ }

char = {
    !("\"" | "\\") ~ ANY
    | "\\" ~ ("\"" | "\\" | "/" | "b" | "f" | "n" | "r" | "t")
    | "\\" ~ ("u" ~ ASCII_HEX_DIGIT{4})
}
letter_or_number = @{ ASCII_HEX_DIGIT+ | ASCII_ALPHA+ }

WHITESPACE = _{ " " | "\t" | "\r" | "\n" }

style = { style_tag_start ~ style_body ~ style_tag_end }
style_tag_start = _{ "<style>" }
style_tag_end = _{ "</style>" }
style_body = { (!style_tag_end ~ ANY)* }

comment = { comment_tag_start ~ comment_body ~ comment_tag_end }
comment_body = { (!comment_tag_end ~ ANY)* }
comment_tag_start = _{ "<!" ~ "--" }
comment_tag_end = _{ "--" ~ ">" }
